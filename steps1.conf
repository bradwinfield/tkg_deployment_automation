# Start with a clean environment before running terraform...
clean_up_tfstate_files.sh

# Check/create users in vCenter before everything else...
check_users.py
# This terraform directory contains code to create roles and privileges.
user_terraform

# Add the user/role in the global permission table...
check_global_permissions.py

# Check/create the AVI resource pool...
check_avi_resource_pool.py

# Create the 3 AVI controllers...
avi_controller_terraform
Abort if the AVI Controller does not get installed.

# Add step to configure the AVI controllers...
# This step is generating an error because it can not yet set the passphrase. Do it during manual config step.
set_avi_admin_password.py
Abort if AVI is not initialized.
#avi_configure_backup.py - not working yet

avi_cloud_credentials.py

# Please check AVI Default-Cloud to see if the vSphere objects are synchronizing.
# print_check_avi.sh
# pause_steps.sh

avi_configure_mgmt_network.py
avi_ipam_data_profile.py
avi_cloud_finish.py
avi_configure_data_network.py
# This next step will only configure the workload network if on a different subnet than the data network.
# It's ok to leave it as an active step. It will check to see if it should do something.
avi_configure_workload_network.py
avi_configure_vrf.py

# Once you have completed the AVI configuration...
# Convert the license to ...
avi_license_change.py ENTERPRISE

avi_ha.py
Abort if we can not configure AVI HA

# When you configure AVI for HA, it will take a while
# before it becomes responsive. So poll it until it is ready.
wait_for_avi_ha.py
Abort if AVI never comes back.

print_certificate_manual_steps.sh
Exit - restart with steps2.conf after putting the certificate in the config file.
